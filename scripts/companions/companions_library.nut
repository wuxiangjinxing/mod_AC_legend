local gt = this.getroottable();
if (!("Companions" in gt.Const))
{
	gt.Const.Companions <- {};
}
gt.Const.Companions.BeastMasters <- [
	["background.legend_commander_druid", 0.02],
	["background.legend_druid", 0.015],
	["background.legend_commander_ranger", 0.015],
	["background.legend_ranger", 0.01],
	["background.houndmaster", 0.01],
	["background.legend_muladi", 0.01]
];
gt.Const.Companions.TameListByType <- [
	this.Const.EntityType.Wardog,
	this.Const.EntityType.Wardog,
	this.Const.EntityType.Wardog,
	this.Const.EntityType.Warhound,
	this.Const.EntityType.Warhound,
	this.Const.EntityType.Warhound,
	this.Const.EntityType.Wolf,
	this.Const.EntityType.Direwolf,
	this.Const.EntityType.Direwolf,
	this.Const.EntityType.Hyena,
	this.Const.EntityType.Hyena,
	this.Const.EntityType.Spider,
	this.Const.EntityType.Serpent,
	this.Const.EntityType.Ghoul,
	this.Const.EntityType.Alp,
	this.Const.EntityType.Unhold,						
	this.Const.EntityType.BarbarianUnhold,				
	this.Const.EntityType.Schrat,
	this.Const.EntityType.Lindwurm,
	"mod_AC_TomeReanimation",
	this.Const.EntityType.LegendBear,
	this.Const.EntityType.LegendWhiteWarwolf,
	this.Const.EntityType.Wolf,
	this.Const.EntityType.Wolf,
	this.Const.EntityType.LegendDemonHound,
	this.Const.EntityType.LegendHorse,
	this.Const.EntityType.LegendGreenwoodSchrat,
	this.Const.EntityType.LegendRedbackSpider,
	this.Const.EntityType.LegendRockUnhold,
	this.Const.EntityType.LegendSkinGhoul,
	this.Const.EntityType.LegendStollwurm,
	this.Const.EntityType.LegendWhiteDirewolf,
	this.Const.EntityType.LegendDemonAlp
];
gt.Const.Companions.TypeList <- {
	Wardog = 0,
	WardogArmor = 1,
	WardogArmorHeavy = 2,
	Warhound = 3,
	WarhoundArmor = 4,
	WarhoundArmorHeavy = 5,
	Warwolf = 6,
	Direwolf = 7,
	DirewolfFrenzied = 8,
	Hyena = 9,
	HyenaFrenzied = 10,
	Spider = 11,
	Snake = 12,
	Nacho = 13,
	Alp = 14,
	Unhold = 15,
	UnholdArmor = 16,
	Schrat = 17,
	Noodle = 18,
	TomeReanimation = 19,
	Warbear = 20,
	Whitewolf = 21,
	WarwolfArmor = 22,
	WarwolfArmorHeavy = 23,
	DemonHound = 24,
	Horse = 25,
	GreenwoodSchrat = 26,
	RedbackSpider = 27,
	RockUnhold = 28,
	SkinGhoul = 29,
	Stollwurm = 30,
	WhiteDirewolf = 31,
	DemonAlp = 32
};

gt.Const.Companions.Library <- [
	{
		ID = "accessory.wardog",
		Type = this.Const.Companions.TypeList.Wardog,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wardog Collar",
		Description = "A strong and loyal dog bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a wardog that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/dog_01_0" + variant + "_70x70.png"; },
		IconUnleashed = "tools/dog_01_leash_70x70.png",
		Value = 200,
		PartyStrength = 3.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = { Hitpoints = 50, Stamina = 130, Bravery = 40, Initiative = 130, MeleeSkill = 50, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_wardog",
		ArmorScript = null,
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wardog_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wardog_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.armored_wardog",
		Type = this.Const.Companions.TypeList.WardogArmor,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wardog Collar",
		Description = "A strong and loyal dog bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a leather coat for protection against cutting wounds.",
		DescriptionUnleashed = "The collar of a wardog that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/dog_01_0" + variant + "_armor_01_70x70.png"; },
		IconUnleashed = "tools/dog_01_leash_70x70.png",
		Value = 400,
		PartyStrength = 5.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = { Hitpoints = 50, Stamina = 130, Bravery = 40, Initiative = 130, MeleeSkill = 50, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_wardog",
		ArmorScript = "scripts/items/armor/special/wardog_armor",
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wardog_light_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_light_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wardog_light_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_light_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.heavily_armored_wardog",
		Type = this.Const.Companions.TypeList.WardogArmorHeavy,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wardog Collar",
		Description = "A strong and loyal dog bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a heavy hide coat for protection.",
		DescriptionUnleashed = "The collar of a wardog that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/dog_01_0" + variant + "_armor_02_70x70.png"; },
		IconUnleashed = "tools/dog_01_leash_70x70.png",
		Value = 600,
		PartyStrength = 7.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = { Hitpoints = 50, Stamina = 130, Bravery = 40, Initiative = 130, MeleeSkill = 50, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_wardog",
		ArmorScript = "scripts/items/armor/special/wardog_heavy_armor",
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wardog_heavy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_heavy_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wardog_heavy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wardog_heavy_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.warhound",
		Type = this.Const.Companions.TypeList.Warhound,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Warhound Collar",
		Description = "A strong and loyal dog bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a warhound that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/hound_0" + variant + "_70x70.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 250,
		PartyStrength = 4.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 70, Stamina = 140, Bravery = 50, Initiative = 110, MeleeSkill = 55, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 20 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warhound",
		ArmorScript = null,
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/warhound_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/warhound_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165"	}
	},
	{
		ID = "accessory.armored_warhound",
		Type = this.Const.Companions.TypeList.WarhoundArmor,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Warhound Collar",
		Description = "A strong and loyal northern hound bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a leather coat for protection against cutting wounds.",
		DescriptionUnleashed = "The collar of a warhound that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/hound_0" + variant + "_armor_01_70x70.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 450,
		PartyStrength = 6.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 70, Stamina = 140, Bravery = 50, Initiative = 110, MeleeSkill = 55, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 20 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warhound",
		ArmorScript = "scripts/items/armor/special/wardog_armor",
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/warhound_light_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_light_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/warhound_light_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_light_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165"	}
	},
	{
		ID = "accessory.heavily_armored_warhound",
		Type = this.Const.Companions.TypeList.WarhoundArmorHeavy,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Warhound Collar",
		Description = "A strong and loyal northern hound bred for war. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a heavy hide coat for protection.",
		DescriptionUnleashed = "The collar of a warhound that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/hound_0" + variant + "_armor_02_70x70.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 750,
		PartyStrength = 8.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 70, Stamina = 140, Bravery = 50, Initiative = 110, MeleeSkill = 55, RangedSkill = 0, MeleeDefense = 20, RangedDefense = 20 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warhound",
		ArmorScript = "scripts/items/armor/special/wardog_heavy_armor",
		UnleashSounds = ["sounds/combat/unleash_wardog_01.wav", "sounds/combat/unleash_wardog_02.wav", "sounds/combat/unleash_wardog_03.wav", "sounds/combat/unleash_wardog_04.wav"],
		InventorySounds = ["sounds/inventory/wardog_inventory_01.wav", "sounds/inventory/wardog_inventory_02.wav", "sounds/inventory/wardog_inventory_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/warhound_heavy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_heavy_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/warhound_heavy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/warhound_heavy_0" + variant + "_sw_ac.png"; },
					Overlay = "active_165"	}
	},
	{
		ID = "accessory.warwolf",
		Type = this.Const.Companions.TypeList.Warwolf,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wolf Collar",
		Description = "A strong and wild wolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a wolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { if (variant == 1)	{ return "tools/wolf_02_70x70.png"; } else { return "tools/wolf_01_70x70.png"; } },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 600,
		PartyStrength = 5.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 90, Stamina = 150, Bravery = 60, Initiative = 135, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 25, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warwolf",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/wolf_idle_00.wav", "sounds/enemies/wolf_idle_01.wav", "sounds/enemies/wolf_idle_02.wav", "sounds/enemies/wolf_idle_03.wav", "sounds/enemies/wolf_idle_04.wav", "sounds/enemies/wolf_idle_06.wav", "sounds/enemies/wolf_idle_07.wav", "sounds/enemies/wolf_idle_08.wav", "sounds/enemies/wolf_idle_09.wav"],
		InventorySounds = ["sounds/enemies/wolf_idle_08.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.direwolf",
		Type = this.Const.Companions.TypeList.Direwolf,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Direwolf Collar",
		Description = "A direwolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a direwolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/direwolf_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1000,
		PartyStrength = 15.0,
		Variant = function() { return this.Math.rand(1, 3); },
		BasicAttributes = { Hitpoints = 130, Stamina = 180, Bravery = 50, Initiative = 150, MeleeSkill = 60, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 10 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_direwolf",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/werewolf_idle_01.wav", "sounds/enemies/werewolf_idle_02.wav", "sounds/enemies/werewolf_idle_03.wav", "sounds/enemies/werewolf_idle_05.wav", "sounds/enemies/werewolf_idle_06.wav", "sounds/enemies/werewolf_idle_07.wav", "sounds/enemies/werewolf_idle_08.wav"],
		InventorySounds = ["sounds/enemies/werewolf_idle_11.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/direwolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/direwolf_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/direwolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/direwolf_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.direwolf_frenzied",
		Type = this.Const.Companions.TypeList.DirewolfFrenzied,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Direwolf Collar",
		Description = "A frenzied direwolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a direwolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/direwolf_frenzy_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1500,
		PartyStrength = 22.0,
		Variant = function() { return this.Math.rand(1, 3); },
		BasicAttributes = { Hitpoints = 150, Stamina = 180, Bravery = 70, Initiative = 150, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 10 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_direwolf_frenzied",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/werewolf_idle_01.wav", "sounds/enemies/werewolf_idle_02.wav", "sounds/enemies/werewolf_idle_03.wav", "sounds/enemies/werewolf_idle_05.wav", "sounds/enemies/werewolf_idle_06.wav", "sounds/enemies/werewolf_idle_07.wav", "sounds/enemies/werewolf_idle_08.wav"],
		InventorySounds = ["sounds/enemies/werewolf_idle_11.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/direwolf_frenzy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/direwolf_frenzy_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/direwolf_frenzy_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/direwolf_frenzy_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.hyena",
		Type = this.Const.Companions.TypeList.Hyena,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Hyena Collar",
		Description = "A hyena, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a hyena that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/hyena_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1050,
		PartyStrength = 15.0,
		Variant = function() { return this.Math.rand(1, 3); },
		BasicAttributes = { Hitpoints = 120, Stamina = 180, Bravery = 50, Initiative = 90, MeleeSkill = 60, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 10 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_hyena",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc6/hyena_idle_02.wav", "sounds/enemies/dlc6/hyena_idle_05.wav", "sounds/enemies/dlc6/hyena_idle_07.wav", "sounds/enemies/dlc6/hyena_idle_09.wav", "sounds/enemies/dlc6/hyena_idle_11.wav"],
		InventorySounds = ["sounds/enemies/dlc6/hyena_idle_21.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/hyena_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/hyena_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/hyena_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/hyena_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.hyena_frenzied",
		Type = this.Const.Companions.TypeList.HyenaFrenzied,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Hyena Collar",
		Description = "A frenzied hyena, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a hyena that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/hyena_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1550,
		PartyStrength = 22.0,
		Variant = function() { return this.Math.rand(4, 6); },
		BasicAttributes = { Hitpoints = 140, Stamina = 180, Bravery = 70, Initiative = 130, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 10 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_hyena_frenzied",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc6/hyena_idle_02.wav", "sounds/enemies/dlc6/hyena_idle_05.wav", "sounds/enemies/dlc6/hyena_idle_07.wav", "sounds/enemies/dlc6/hyena_idle_09.wav", "sounds/enemies/dlc6/hyena_idle_11.wav"],
		InventorySounds = ["sounds/enemies/dlc6/hyena_idle_21.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/hyena_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/hyena_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/hyena_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/hyena_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.spider",
		Type = this.Const.Companions.TypeList.Spider,
		Name = function() { return this.Const.Companions.SlitherachnoNames[this.Math.rand(0, this.Const.Companions.SlitherachnoNames.len() - 1)]; },
		NameUnleashed = "Webknecht Collar",
		Description = "A webknecht, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a webknecht that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/spider_01_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 700,
		PartyStrength = 12.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = { Hitpoints = 60, Stamina = 130, Bravery = 45, Initiative = 150, MeleeSkill = 60, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 20 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_spider",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc2/giant_spider_idle_04.wav", "sounds/enemies/dlc2/giant_spider_idle_10.wav", "sounds/enemies/dlc2/giant_spider_idle_11.wav", "sounds/enemies/dlc2/giant_spider_idle_12.wav", "sounds/enemies/dlc2/giant_spider_idle_14.wav", "sounds/enemies/dlc2/giant_spider_idle_15.wav"],
		InventorySounds = ["sounds/enemies/dlc2/giant_spider_idle_11.wav", "sounds/enemies/dlc2/giant_spider_idle_12.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/spider_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/spider_01_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/spider_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/spider_01_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.snake",
		Type = this.Const.Companions.TypeList.Snake,
		Name = function() { return this.Const.Companions.SlitherachnoNames[this.Math.rand(0, this.Const.Companions.SlitherachnoNames.len() - 1)]; },
		NameUnleashed = "Serpent Collar",
		Description = "A serpent, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a serpent that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/snake_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 900,
		PartyStrength = 22.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = { Hitpoints = 130, Stamina = 110, Bravery = 100, Initiative = 50, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_snake",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc6/snake_idle_04.wav", "sounds/enemies/dlc6/snake_idle_05.wav"],
		InventorySounds = ["sounds/enemies/dlc6/snake_idle_04.wav", "sounds/enemies/dlc6/snake_idle_05.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/snake_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/snake_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/snake_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/snake_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.nacho",
		Type = this.Const.Companions.TypeList.Nacho,
		Name = function() { return this.Const.Companions.GutturalNames[this.Math.rand(0, this.Const.Companions.GutturalNames.len() - 1)]; },
		NameUnleashed = "Nachzehrer Collar",
		Description = "A nachzehrer, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a nachzehrer that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/nacho_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 950,
		PartyStrength = 8.0,
		Variant = function() { return this.Math.rand(1, 3); },
		BasicAttributes = { Hitpoints = 80, Stamina = 130, Bravery = 50, Initiative = 125, MeleeSkill = 60, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 15 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_nacho",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/ghoul_idle_02.wav", "sounds/enemies/ghoul_idle_04.wav", "sounds/enemies/ghoul_idle_07.wav", "sounds/enemies/ghoul_idle_10.wav", "sounds/enemies/ghoul_idle_11.wav", "sounds/enemies/ghoul_idle_16.wav", "sounds/enemies/ghoul_idle_18.wav", "sounds/enemies/ghoul_idle_19.wav", "sounds/enemies/ghoul_idle_20.wav", "sounds/enemies/ghoul_idle_21.wav", "sounds/enemies/ghoul_idle_22.wav", "sounds/enemies/ghoul_idle_26.wav"],
		InventorySounds = ["sounds/enemies/ghoul_idle_02.wav", "sounds/enemies/ghoul_idle_04.wav", "sounds/enemies/ghoul_idle_07.wav", "sounds/enemies/ghoul_idle_10.wav", "sounds/enemies/ghoul_idle_11.wav", "sounds/enemies/ghoul_idle_16.wav", "sounds/enemies/ghoul_idle_18.wav", "sounds/enemies/ghoul_idle_19.wav", "sounds/enemies/ghoul_idle_20.wav", "sounds/enemies/ghoul_idle_21.wav", "sounds/enemies/ghoul_idle_22.wav", "sounds/enemies/ghoul_idle_26.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/nacho_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/nacho_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/nacho_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/nacho_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.alp",
		Type = this.Const.Companions.TypeList.Alp,
		Name = function() { return this.Const.Companions.SpookNames[this.Math.rand(0, this.Const.Companions.SpookNames.len() - 1)]; },
		NameUnleashed = "Alp Collar",
		Description = "An alp, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of an alp that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/alp_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 2000,
		PartyStrength = 22.0,
		Variant = function() { return this.Math.rand(1, 3); },
		BasicAttributes = { Hitpoints = 100, Stamina = 100, Bravery = 100, Initiative = 60, MeleeSkill = 0, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 10 },
		PreferredAttribute = this.Const.Attributes.Hitpoints,
		Script = "scripts/companions/types/companions_alp",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc2/alp_hurt_01.wav", "sounds/enemies/dlc2/alp_hurt_02.wav"],
		InventorySounds = ["sounds/enemies/dlc2/alp_hurt_01.wav", "sounds/enemies/dlc2/alp_hurt_02.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/alp_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/alp_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/alp_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/alp_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.unhold",
		Type = this.Const.Companions.TypeList.Unhold,
		Name = function() { return this.Const.Companions.GutturalNames[this.Math.rand(0, this.Const.Companions.GutturalNames.len() - 1)]; },
		NameUnleashed = "Unhold Collar",
		Description = "A unhold, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a unhold that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/unhold_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 2500,
		PartyStrength = 50.0,
		Variant = function() { return this.Math.rand(1, 5); },
		BasicAttributes = { Hitpoints = 500, Stamina = 400, Bravery = 130, Initiative = 75, MeleeSkill = 70, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 0 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_unhold",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		InventorySounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/unhold_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/unhold_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/unhold_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/unhold_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.armored_unhold",
		Type = this.Const.Companions.TypeList.UnholdArmor,
		Name = function() { return this.Const.Companions.GutturalNames[this.Math.rand(0, this.Const.Companions.GutturalNames.len() - 1)]; },
		NameUnleashed = "Unhold Collar",
		Description = "A unhold, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of an unhold that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/unhold_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 3500,
		PartyStrength = 74.0,
		Variant = function() { return this.Math.rand(1, 5); },
		BasicAttributes = { Hitpoints = 500, Stamina = 400, Bravery = 130, Initiative = 75, MeleeSkill = 70, RangedSkill = 0, MeleeDefense = 10, RangedDefense = 0 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_unhold",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		InventorySounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/unhold_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/unhold_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/unhold_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/unhold_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.schrat",
		Type = this.Const.Companions.TypeList.Schrat,
		Name = function() { return this.Const.Companions.TreefolkNames[this.Math.rand(0, this.Const.Companions.TreefolkNames.len() - 1)]; },
		NameUnleashed = "Schrat Collar",
		Description = "A schrat, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a schrat that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/schrat_0" + variant + "_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 4000,
		PartyStrength = 75.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 600, Stamina = 400, Bravery = 200, Initiative = 60, MeleeSkill = 70, RangedSkill = 0, MeleeDefense = -5, RangedDefense = -5 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_schrat",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc2/schrat_hurt_shield_up_01.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_02.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_03.wav"],
		InventorySounds = ["sounds/enemies/dlc2/schrat_hurt_shield_up_01.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_02.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/schrat_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/schrat_0" + variant + "_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/schrat_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/schrat_0" + variant + "_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.noodle",
		Type = this.Const.Companions.TypeList.Noodle,
		Name = function() { return this.Const.Companions.SlitherachnoNames[this.Math.rand(0, this.Const.Companions.SlitherachnoNames.len() - 1)]; },
		NameUnleashed = "Lindwurm Collar",
		Description = "A lindwurm, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a lindwurm that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/noodle_01_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 5000,
		PartyStrength = 96.0,
		Variant = function() { return 1; },
		BasicAttributes = { Hitpoints = 1100, Stamina = 400, Bravery = 180, Initiative = 80, MeleeSkill = 75, RangedSkill = 0, MeleeDefense = 10, RangedDefense = -10 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_noodle",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/lindwurm_hurt_01.wav", "sounds/enemies/lindwurm_hurt_02.wav", "sounds/enemies/lindwurm_hurt_03.wav", "sounds/enemies/lindwurm_hurt_04.wav"],
		InventorySounds = ["sounds/enemies/lindwurm_hurt_01.wav", "sounds/enemies/lindwurm_hurt_02.wav", "sounds/enemies/lindwurm_hurt_03.wav", "sounds/enemies/lindwurm_hurt_04.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/noodle_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/noodle_01_sw_ac.png"; },
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/noodle_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/noodle_01_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.tome_reanimation",
		Type = this.Const.Companions.TypeList.TomeReanimation,
		Name = function() { return "Tome of Reanimation"; },
		NameUnleashed = "Tome of Reanimation",
		Description = "A mysterious tome that details the finer points of reanimating the dead.",
		DescriptionUnleashed = "A mysterious tome that details the finer points of reanimating the dead.",
		IconLeashed = function(variant) { return "tools/tome_01_ac.png"; },
		IconUnleashed = "tools/tome_01_ac.png",
		Value = 3000,
		PartyStrength = 30.0,
		Variant = function() { return 1; },
		BasicAttributes = { Hitpoints = 0, Stamina = 0, Bravery = 0, Initiative = 0, MeleeSkill = 0, RangedSkill = 0, MeleeDefense = 0, RangedDefense = 0 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = null,
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/necromancer_01.wav", "sounds/enemies/necromancer_02.wav", "sounds/enemies/necromancer_03.wav"],
		InventorySounds = ["sounds/combat/armor_leather_impact_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_raise",
					Icon = function(variant) { return "skills/tome_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/tome_01_sw_ac.png"; },
					Overlay = "",
					onActorDied = false	},
		Leash = {	Script = "scripts/skills/actives/legend_possession_skill",
					Icon = function(variant) { return "skills/tome_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/tome_01_sw_ac.png"; },
					Overlay = ""	}
	},
	{
		ID = "accessory.legend_warbear",
		Type = this.Const.Companions.TypeList.Warbear,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Warbear Collar",
		Description = "A Warbear, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a warbear that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/warbear_01_70x70.png"; },
		IconUnleashed = "tools/dog_01_leash_70x70.png",
		Value = 2000,
		PartyStrength = 30.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = {
			Hitpoints = 400,
			Bravery = 80,
			Stamina = 300,
			MeleeSkill = 70,
			RangedSkill = 0,
			MeleeDefense = 10,
			RangedDefense = 0,
			Initiative = 75
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warbear",
		ArmorScript = null,
		UnleashSounds = [
			"sounds/enemies/bear_idle1.wav",
			"sounds/enemies/bear_idle2.wav"
		],
		InventorySounds = [
			"sounds/enemies/bear_idle1.wav"
		],
		Unleash = {
			Script = "scripts/companions/onequip/companions_unleash",
			Icon = function( variant ) { return "skills/bear_square.png"; },
			IconDisabled = function( variant ) { return "skills/bear_square_bw.png"; },
			Overlay = "active_165",
			onActorDied = true
		},
		Leash = {
			Script = "scripts/companions/onequip/companions_leash",
			Icon = function( variant ) { return "skills/bear_square.png"; },
			IconDisabled = function( variant ) { return "skills/bear_square_bw.png"; },
			Overlay = "active_165"
		}
	},
	{
		ID = "accessory.legend_white_warwolf",
		Type = this.Const.Companions.TypeList.Whitewolf,
		Name = function() {
			local whitewolfnames = this.Const.Companions.CanineNames;
			whitewolfnames.push("White Wolf Queen")
			return whitewolfnames[this.Math.rand(0, whitewolfnames.len() - 1)]; 
		},
		NameUnleashed = "White wolf Collar",
		Description = "A White wolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a white wolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/legend_white_wolf_01_70x70.png"; },
		IconUnleashed = "tools/legend_white_wolf_leash_70x70.png",
		Value = 2000,
		PartyStrength = 30.0,
		Variant = function() { return this.Math.rand(1, 4); },
		BasicAttributes = {
			Hitpoints = 200,
			Bravery = 100,
			Stamina = 200,
			MeleeSkill = 60,
			RangedSkill = 0,
			MeleeDefense = 20,
			RangedDefense = 20,
			Initiative = 150
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_whitewolf",
		ArmorScript = null,
		UnleashSounds = [
			"sounds/enemies/wolf_idle_00.wav",
			"sounds/enemies/wolf_idle_01.wav",
			"sounds/enemies/wolf_idle_02.wav",
			"sounds/enemies/wolf_idle_03.wav",
			"sounds/enemies/wolf_idle_04.wav",
			"sounds/enemies/wolf_idle_06.wav",
			"sounds/enemies/wolf_idle_07.wav",
			"sounds/enemies/wolf_idle_08.wav",
			"sounds/enemies/wolf_idle_09.wav"
		],
		InventorySounds = [
			"sounds/enemies/wolf_idle_08.wav"
		],
		Unleash = {
			Script = "scripts/companions/onequip/companions_unleash",
			Icon = function( variant ) { return "skills/unleash_white_wolf.png"; },
			IconDisabled = function( variant ) { return "skills/unleash_white_wolf_bw.png"; },
			Overlay = "active_83",
			onActorDied = true
		},
		Leash = {
			Script = "scripts/companions/onequip/companions_leash",
			Icon = function( variant ) { return "skills/unleash_white_wolf.png"; },
			IconDisabled = function( variant ) { return "skills/unleash_white_wolf_bw.png"; },
			Overlay = "active_83"
		}
	},
	{
		ID = "accessory.armored_wolf",
		Type = this.Const.Companions.TypeList.WarwolfArmor,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wolf Collar",
		Description = "A strong and wild wolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a leather coat for protection against cutting wounds.",
		DescriptionUnleashed = "The collar of a wolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { if (variant == 1)	{ return "tools/wolf_02_armor_01_70x70.png"; } else { return "tools/wolf_01_armor_01_70x70.png"; } },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 800,
		PartyStrength = 7.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 90, Stamina = 150, Bravery = 60, Initiative = 135, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 25, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warwolf",
		ArmorScript = "scripts/items/armor/special/warwolf_armor",
		UnleashSounds = ["sounds/enemies/wolf_idle_00.wav", "sounds/enemies/wolf_idle_01.wav", "sounds/enemies/wolf_idle_02.wav", "sounds/enemies/wolf_idle_03.wav", "sounds/enemies/wolf_idle_04.wav", "sounds/enemies/wolf_idle_06.wav", "sounds/enemies/wolf_idle_07.wav", "sounds/enemies/wolf_idle_08.wav", "sounds/enemies/wolf_idle_09.wav"],
		InventorySounds = ["sounds/enemies/wolf_idle_08.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.heavily_armored_wolf",
		Type = this.Const.Companions.TypeList.WarwolfArmorHeavy,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Wolf Collar",
		Description = "A strong and wild wolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies. This one wears a heavy hide coat for protection.",
		DescriptionUnleashed = "The collar of a wolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { if (variant == 1)	{ return "tools/wolf_02_armor_02_70x70.png"; } else { return "tools/wolf_01_armor_02_70x70.png"; } },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1000,
		PartyStrength = 10.0,
		Variant = function() { return this.Math.rand(1, 2); },
		BasicAttributes = { Hitpoints = 90, Stamina = 150, Bravery = 60, Initiative = 135, MeleeSkill = 65, RangedSkill = 0, MeleeDefense = 25, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_warwolf",
		ArmorScript = "scripts/items/armor/special/warwolf_heavy_armor",
		UnleashSounds = ["sounds/enemies/wolf_idle_00.wav", "sounds/enemies/wolf_idle_01.wav", "sounds/enemies/wolf_idle_02.wav", "sounds/enemies/wolf_idle_03.wav", "sounds/enemies/wolf_idle_04.wav", "sounds/enemies/wolf_idle_06.wav", "sounds/enemies/wolf_idle_07.wav", "sounds/enemies/wolf_idle_08.wav", "sounds/enemies/wolf_idle_09.wav"],
		InventorySounds = ["sounds/enemies/wolf_idle_08.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/wolf_0" + variant + "_ac.png"; },
					IconDisabled = function(variant) { return "skills/wolf_0" + variant + "_sw_ac.png"; },
					Overlay = "active_83"	}
	},
	{
		ID = "accessory.demonhound",
		Type = this.Const.Companions.TypeList.DemonHound,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Cerberus Collar",
		Description = "A Cerberus, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a Cerberus that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/demonhound_01_ac.png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 2500,
		PartyStrength = 15.0,
		Variant = function() { return 1; },
		BasicAttributes = { Hitpoints = 125, Stamina = 100, Bravery = 100, Initiative = 100, MeleeSkill = 55, RangedSkill = 0, MeleeDefense = 15, RangedDefense = 25 },
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_demonhound",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/hollen_hurt_01.wav", "sounds/enemies/hollen_hurt_02.wav", "sounds/enemies/hollen_hurt_03.wav"],
		InventorySounds = ["sounds/enemies/hollen_hurt_01.wav", "sounds/enemies/hollen_hurt_02.wav", "sounds/enemies/hollen_hurt_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/demonhound_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/demonhound_01_sw_ac.png"; },
					Overlay = "active_165",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/demonhound_01_ac.png"; },
					IconDisabled = function(variant) { return "skills/demonhound_01_sw_ac.png"; },
					Overlay = "active_165"	}
	},
	{
		ID = "accessory.horse",
		Type = this.Const.Companions.TypeList.Horse,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "Rein",
		Description = "Horses are used to long and exhausting travels.",
		DescriptionUnleashed = "The rein of a horse that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/horse_0" + variant + ".png"; },
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 1000,
		PartyStrength = 12.0,
		Variant = function() { return this.Math.rand(0, 7); },
		BasicAttributes = { Hitpoints = 200, Stamina = 150, Bravery = 40, Initiative = 100, MeleeSkill = 45, RangedSkill = 0, MeleeDefense = 0, RangedDefense = 0 },
		PreferredAttribute = this.Const.Attributes.Hitpoints,
		Script = "scripts/companions/types/companions_horse",
		ArmorScript = null,
		UnleashSounds = ["sounds/misc/donkey_hurt_01.wav", "sounds/misc/donkey_hurt_02.wav", "sounds/misc/donkey_hurt_03.wav"],
		InventorySounds = ["sounds/misc/donkey_hurt_01.wav", "sounds/misc/donkey_hurt_02.wav", "sounds/misc/donkey_hurt_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_blank",
					Icon = function(variant) { return ""; },
					IconDisabled = function(variant) { return ""; },
					Overlay = "",
					onActorDied = false	},
		Leash = {	Script = "scripts/companions/onequip/companions_blank",
					Icon = function(variant) { return ""; },
					IconDisabled = function(variant) { return ""; },
					Overlay = ""	}
	},
	{
		ID = "accessory.legend_greenwood_schrat",
		Type = this.Const.Companions.TypeList.GreenwoodSchrat,
		Name = function() { return this.Const.Companions.TreefolkNames[this.Math.rand(0, this.Const.Companions.TreefolkNames.len() - 1)]; },
		NameUnleashed = "Greenwood Schrat Collar",
		Description = "A Greenwood Schrat, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a Greenwood Schrat that has been unleashed onto the battlefield.",
		IconLeashed = function( variant ) { return "tools/greenwood_schrat_01_ac.png"; },		
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 11000,  												
		PartyStrength = 187.0,																					
		Variant = function() { return this.Math.rand(1, 2); },							
		BasicQuirks = [	
			"scripts/skills/perks/perk_pathfinder",					
			"scripts/skills/perks/perk_crippling_strikes",
			"scripts/skills/perks/perk_steel_brow",
			"scripts/skills/perks/perk_hold_out"
		],
		BasicAttributes = {
			
			Hitpoints = 900,
			Bravery = 200,
			Stamina = 400,
			MeleeSkill = 80,
			RangedSkill = 0,
			MeleeDefense = 10,
			RangedDefense = 10,
			Initiative = 80
			
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_greenwood_schrat",
		ArmorScript = null,
		
		UnleashSounds = ["sounds/enemies/dlc2/schrat_hurt_shield_up_01.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_02.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_03.wav"],
		InventorySounds = ["sounds/enemies/dlc2/schrat_hurt_shield_up_01.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_02.wav", "sounds/enemies/dlc2/schrat_hurt_shield_up_03.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/greenwood_schrat_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/greenwood_schrat_01_sw_ac.png"; },		
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/greenwood_schrat_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/greenwood_schrat_01_sw_ac.png"; },		
					Overlay = ""	}
	},
	{
		ID = "accessory.legend_redback_spider",
		Type = this.Const.Companions.TypeList.RedbackSpider,
		Name = function() { return this.Const.Companions.SlitherachnoNames[this.Math.rand(0, this.Const.Companions.SlitherachnoNames.len() - 1)]; },
		NameUnleashed = "Redback Spider Collar",
		Description = "A redback spider, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a redback spider that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/redback_spider_01_ac.png"; },			
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 7000,																	
		PartyStrength = 90.0,																														
		Variant = function() { return this.Math.rand(1, 4); },
		BasicQuirks = [
			"scripts/skills/perks/perk_pathfinder",
			"scripts/skills/perks/perk_backstabber",
			"scripts/skills/perks/perk_nimble",
			"scripts/skills/perks/perk_fast_adaption",
			"scripts/skills/perks/perk_killing_frenzy",
			"scripts/skills/perks/perk_underdog",
			"scripts/skills/perks/perk_overwhelm"
		],
		BasicAttributes = { 
			Hitpoints = 250,
			Bravery = 120,
			Stamina = 180,
			MeleeSkill = 80,
			RangedSkill = 0,
			MeleeDefense = 40,
			RangedDefense = 40,
			Initiative = 175
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_redback_spider",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc2/giant_spider_idle_04.wav", "sounds/enemies/dlc2/giant_spider_idle_10.wav", "sounds/enemies/dlc2/giant_spider_idle_11.wav", "sounds/enemies/dlc2/giant_spider_idle_12.wav", "sounds/enemies/dlc2/giant_spider_idle_14.wav", "sounds/enemies/dlc2/giant_spider_idle_15.wav"],
		InventorySounds = ["sounds/enemies/dlc2/giant_spider_idle_11.wav", "sounds/enemies/dlc2/giant_spider_idle_12.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/redback_spider_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/redback_spider_01_sw_ac.png"; },		
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/redback_spider_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/redback_spider_01_sw_ac.png"; },		
					Overlay = ""	}
	},
	{
		ID = "accessory.rock_unhold",
		Type = this.Const.Companions.TypeList.RockUnhold,
		Name = function() { return this.Const.Companions.GutturalNames[this.Math.rand(0, this.Const.Companions.GutturalNames.len() - 1)]; },
		NameUnleashed = "Rock Unhold Collar",
		Description = "A rock unhold, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a rock unhold that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/rock_unhold_0" + variant + "_ac.png"; },			
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 10000,																				
		PartyStrength = 187.0,																																					
		Variant = function() { return 1; },
		BasicQuirks = [
		"scripts/skills/perks/perk_crippling_strikes",
		"scripts/skills/perks/perk_pathfinder",
		"scripts/skills/perks/perk_steel_brow",
		"scripts/skills/perks/perk_battering_ram",
		"scripts/skills/perks/perk_stalwart",
		"scripts/skills/perks/perk_hold_out"
		],
		BasicAttributes = { 
			Hitpoints = 1000,
			Bravery = 250,
			Stamina = 400,
			MeleeSkill = 75,
			RangedSkill = 0,
			MeleeDefense = 10,
			RangedDefense = 0,
			Initiative = 65
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_rock_unhold",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		InventorySounds = ["sounds/enemies/unhold_confused_01.wav", "sounds/enemies/unhold_confused_02.wav", "sounds/enemies/unhold_confused_03.wav", "sounds/enemies/unhold_confused_04.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/rock_unhold_0" + variant + "_ac.png"; },					
					IconDisabled = function(variant) { return "skills/rock_unhold_0" + variant + "_sw_ac.png"; },		
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/rock_unhold_0" + variant + "_ac.png"; },					
					IconDisabled = function(variant) { return "skills/rock_unhold_0" + variant + "_sw_ac.png"; },		
					Overlay = ""	}
	},
	{
		ID = "accessory.skin_ghoul",
		Type = this.Const.Companions.TypeList.SkinGhoul,
		Name = function() { return this.Const.Companions.GutturalNames[this.Math.rand(0, this.Const.Companions.GutturalNames.len() - 1)]; },
		NameUnleashed = "Skin Ghoul Collar",
		Description = "A skin ghoul, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a nachzehrer that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/skin_nacho_0" + variant + "_ac.png"; },							
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 7000,																								
		PartyStrength = 75.0,																						// + 22 and +33 per size																						
		Variant = function() { return this.Math.rand(1, 3); },
		BasicQuirks = [
			"scripts/skills/perks/perk_pathfinder",
			"scripts/skills/perks/perk_nimble",
			"scripts/skills/perks/perk_killing_frenzy"
		],
		BasicAttributes = { 
			Hitpoints = 240,
			Bravery = 80,
			Stamina = 130,
			MeleeSkill = 80,
			RangedSkill = 0,
			MeleeDefense = 20,
			RangedDefense = 15,
			Initiative = 135
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_skin_ghoul",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/ghoul_idle_02.wav", "sounds/enemies/ghoul_idle_04.wav", "sounds/enemies/ghoul_idle_07.wav", "sounds/enemies/ghoul_idle_10.wav", "sounds/enemies/ghoul_idle_11.wav", "sounds/enemies/ghoul_idle_16.wav", "sounds/enemies/ghoul_idle_18.wav", "sounds/enemies/ghoul_idle_19.wav", "sounds/enemies/ghoul_idle_20.wav", "sounds/enemies/ghoul_idle_21.wav", "sounds/enemies/ghoul_idle_22.wav", "sounds/enemies/ghoul_idle_26.wav"],
		InventorySounds = ["sounds/enemies/ghoul_idle_02.wav", "sounds/enemies/ghoul_idle_04.wav", "sounds/enemies/ghoul_idle_07.wav", "sounds/enemies/ghoul_idle_10.wav", "sounds/enemies/ghoul_idle_11.wav", "sounds/enemies/ghoul_idle_16.wav", "sounds/enemies/ghoul_idle_18.wav", "sounds/enemies/ghoul_idle_19.wav", "sounds/enemies/ghoul_idle_20.wav", "sounds/enemies/ghoul_idle_21.wav", "sounds/enemies/ghoul_idle_22.wav", "sounds/enemies/ghoul_idle_26.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/skin_nacho_0" + variant + "_ac.png"; },					
					IconDisabled = function(variant) { return "skills/skin_nacho_0" + variant + "_sw_ac.png"; },			
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/skin_nacho_0" + variant + "_ac.png"; },				
					IconDisabled = function(variant) { return "skills/skin_nacho_0" + variant + "_sw_ac.png"; },			
					Overlay = ""	}
	},
	{
		ID = "accessory.stollwurm",
		Type = this.Const.Companions.TypeList.Stollwurm,
		Name = function() { return this.Const.Companions.SlitherachnoNames[this.Math.rand(0, this.Const.Companions.SlitherachnoNames.len() - 1)]; },
		NameUnleashed = "Stollwurm Collar",
		Description = "A Stollwurm, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a stollwurm that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/stollwurm_01_ac.png"; },										
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 20000,																								
		PartyStrength = 220.0,																							
		Variant = function() { return 1; },
		BasicQuirks = [
			"scripts/skills/perks/perk_pathfinder",
			"scripts/skills/perks/perk_hold_out",
			"scripts/skills/perks/perk_reach_advantage",
			"scripts/skills/perks/perk_fearsome",
			"scripts/skills/perks/perk_underdog",
			"scripts/skills/perks/perk_battle_flow",
			"scripts/skills/perks/perk_stalwart"
		],
		BasicAttributes = { 
		Hitpoints = 2000,
		Bravery = 180,
		Stamina = 400,
		MeleeSkill = 75,
		RangedSkill = 0,
		MeleeDefense = 20,
		RangedDefense = 10,
		Initiative = 50
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_stollwurm",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/lindwurm_hurt_01.wav", "sounds/enemies/lindwurm_hurt_02.wav", "sounds/enemies/lindwurm_hurt_03.wav", "sounds/enemies/lindwurm_hurt_04.wav"],
		InventorySounds = ["sounds/enemies/lindwurm_hurt_01.wav", "sounds/enemies/lindwurm_hurt_02.wav", "sounds/enemies/lindwurm_hurt_03.wav", "sounds/enemies/lindwurm_hurt_04.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/stollwurm_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/stollwurm_01_sw_ac.png"; },		
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/stollwurm_01_ac.png"; },					
					IconDisabled = function(variant) { return "skills/stollwurm_01_sw_ac.png"; },		
					Overlay = ""	}
	},
	{
		ID = "accessory.white_direwolf",
		Type = this.Const.Companions.TypeList.WhiteDirewolf,
		Name = function() { return this.Const.Companions.CanineNames[this.Math.rand(0, this.Const.Companions.CanineNames.len() - 1)]; },
		NameUnleashed = "White Direwolf Collar",
		Description = "A white direwolf, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of a white direwolf that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/white_direwolf_01_ac.png"; },		
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 7000,																				
		PartyStrength = 132.0,																			
		Variant = function() { return 1; },
		BasicQuirks = [
			"scripts/skills/perks/perk_coup_de_grace",
			"scripts/skills/perks/perk_berserk",
			"scripts/skills/perks/perk_pathfinder",
			"scripts/skills/perks/perk_overwhelm",
			"scripts/skills/perks/perk_nimble",
			"scripts/skills/perks/perk_fast_adaption",
			"scripts/skills/perks/perk_backstabber",
			"scripts/skills/perks/perk_fearsome"
		],
		BasicAttributes = { 
			Hitpoints = 400,
			Bravery = 150,
			Stamina = 240,
			MeleeSkill = 80,
			RangedSkill = 0,
			MeleeDefense = 20,
			RangedDefense = 20,
			Initiative = 175
		},
		PreferredAttribute = this.Const.Attributes.MeleeSkill,
		Script = "scripts/companions/types/companions_white_direwolf",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/werewolf_idle_01.wav", "sounds/enemies/werewolf_idle_02.wav", "sounds/enemies/werewolf_idle_03.wav", "sounds/enemies/werewolf_idle_05.wav", "sounds/enemies/werewolf_idle_06.wav", "sounds/enemies/werewolf_idle_07.wav", "sounds/enemies/werewolf_idle_08.wav"],
		InventorySounds = ["sounds/enemies/werewolf_idle_11.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/white_direwolf_01_ac.png"; },						
					IconDisabled = function(variant) { return "skills/white_direwolf_01_sw_ac.png"; },			
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/white_direwolf_01_ac.png"; },						
					IconDisabled = function(variant) { return "skills/white_direwolf_01_sw_ac.png"; },			
					Overlay = ""	}
	},
	{
		ID = "accessory.demon_alp",
		Type = this.Const.Companions.TypeList.DemonAlp,
		Name = function() { return this.Const.Companions.SpookNames[this.Math.rand(0, this.Const.Companions.SpookNames.len() - 1)]; },
		NameUnleashed = "Demon Alp Collar",
		Description = "A demon alp, tamed to be a loyal companion in battle. Can be unleashed in battle for scouting, tracking or running down routing enemies.",
		DescriptionUnleashed = "The collar of an alp that has been unleashed onto the battlefield.",
		IconLeashed = function(variant) { return "tools/demon_alp_0" + variant + "_ac.png"; },					
		IconUnleashed = "tools/hound_01_leash_70x70.png",
		Value = 8000,																						
		PartyStrength = 150.0,																																										
		Variant = function() { return this.Math.rand(1, 3); },
		BasicQuirks = [
			"scripts/skills/perks/perk_anticipation",
			"scripts/skills/perks/perk_underdog"
		],
		BasicAttributes = { 
			Hitpoints = 100,
			Bravery = 150,
			Stamina = 150,
			MeleeSkill = 0,
			RangedSkill = 0,
			MeleeDefense = 20,
			RangedDefense = 20,
			Initiative = 999
		},
		PreferredAttribute = this.Const.Attributes.Hitpoints,
		Script = "scripts/companions/types/companions_demon_alp",
		ArmorScript = null,
		UnleashSounds = ["sounds/enemies/dlc2/alp_hurt_01.wav", "sounds/enemies/dlc2/alp_hurt_02.wav"],
		InventorySounds = ["sounds/enemies/dlc2/alp_hurt_01.wav", "sounds/enemies/dlc2/alp_hurt_02.wav"],
		Unleash = {	Script = "scripts/companions/onequip/companions_unleash",
					Icon = function(variant) { return "skills/demon_alp_0" + variant + "_ac.png"; },				
					IconDisabled = function(variant) { return "skills/demon_alp_0" + variant + "_sw_ac.png"; },	
					Overlay = "",
					onActorDied = true	},
		Leash = {	Script = "scripts/companions/onequip/companions_leash",
					Icon = function(variant) { return "skills/demon_alp_0" + variant + "_ac.png"; },				
					IconDisabled = function(variant) { return "skills/demon_alp_0" + variant + "_sw_ac.png"; },	
					Overlay = ""	}
	},	
];
